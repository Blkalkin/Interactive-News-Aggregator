/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.scss */ \"./src/index.scss\");\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Part 1: Create and append the welcoming headline\n  const appContainer = document.getElementById('app'); // Ensure 'app' is the ID of your main container\n\n  // Part 2: Draggable Divider Functionality\n  const divider = document.getElementById('divider');\n  const topicsPane = document.getElementById('topics-pane');\n  let isDragging = false;\n  const updateWidth = e => {\n    const newWidth = e.clientX;\n    const appWidth = app.offsetWidth;\n    if (newWidth > 100 && newWidth < appWidth - 100) {\n      topicsPane.style.width = `${newWidth}px`;\n    }\n  };\n  divider.addEventListener('mousedown', e => {\n    e.preventDefault();\n    isDragging = true;\n  });\n  document.addEventListener('mousemove', e => {\n    if (isDragging) {\n      updateWidth(e);\n    }\n  });\n  document.addEventListener('mouseup', () => {\n    if (isDragging) {\n      isDragging = false;\n    }\n  });\n\n  // Part 3: Fetching Articles and Rendering Topic Header/Menu\n  fetchLatestArticles().then(() => {\n    setTimeout(() => {\n      console.log('Topic Header:', document.getElementById('topic-header'));\n      console.log('Topics Menu:', document.getElementById('topics-menu'));\n    }, 1000); // Adjust the timeout as needed\n  });\n});\n\n// Fetches latest articles and initializes the topic header with menu\nfunction fetchLatestArticles() {\n  console.log('fetchLatestArticles started'); // Log when function starts\n  return fetch('http://127.0.0.1:8000/latest_articles/').then(response => {\n    console.log('Response received'); // Log when response is received\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  }).then(data => {\n    console.log('Data processed'); // Log when data is processed\n    const topics = Object.keys(data);\n    renderTopicHeader(topics, data);\n    renderArticlesByTopic(topics[0], data);\n    console.log('Topics Menu immediately after render:', document.getElementById('topics-menu'));\n  }).catch(error => {\n    console.error('Could not get articles:', error);\n  });\n}\n\n// Renders the topic header and its menu\nfunction renderTopicHeader(topics, articlesData) {\n  console.log('renderTopicHeader started'); // Log when function starts\n\n  const appContainer = document.getElementById('app');\n  const topicHeader = document.createElement('div');\n  topicHeader.id = 'topic-header';\n  topicHeader.classList.add('topic-header');\n  appContainer.insertBefore(topicHeader, appContainer.firstChild);\n  const topicMenu = document.createElement('div');\n  topicMenu.id = 'topics-menu';\n  topicMenu.classList.add('topics-menu', 'hidden'); // Ensure this starts as hidden\n  console.log(\"topic header\", topicHeader);\n  appContainer.appendChild(topicMenu);\n  console.log(\"hello world\", topicMenu);\n  topicHeader.textContent = topics[0];\n  topicHeader.addEventListener('click', () => {\n    console.log('Topic header clicked'); // Log when topic header is clicked\n    topicMenu.classList.toggle('hidden'); // This line toggles the visibility\n    console.log('Topic menu class list:', topicMenu.classList); // Log the class list of the topic menu\n  });\n\n  topics.forEach(topic => {\n    const topicOption = document.createElement('div');\n    topicOption.textContent = topic;\n    topicOption.classList.add('topic-option');\n    topicOption.addEventListener('click', () => {\n      console.log(`Topic option \"${topic}\" clicked`); // Log when a topic option is clicked\n      renderArticlesByTopic(topic, articlesData);\n      topicHeader.textContent = topic;\n      topicMenu.classList.add('hidden'); // Hide the menu after selection\n    });\n\n    topicMenu.appendChild(topicOption);\n  });\n  console.log('renderTopicHeader completed'); // Log when function ends\n}\n\n// Renders articles filtered by topic\nfunction renderArticlesByTopic(topic, articlesData) {\n  const articlesByTopic = articlesData[topic];\n  renderArticles(articlesByTopic);\n}\n\n// Renders articles to the DOM\nfunction renderArticles(articles) {\n  const topicsPane = document.getElementById('topics-pane');\n  topicsPane.innerHTML = ''; // Clear existing articles\n\n  articles.forEach(article => {\n    const articleElement = document.createElement('div');\n    articleElement.classList.add('article');\n    const titleElement = document.createElement('h3');\n    titleElement.textContent = article.title;\n    titleElement.classList.add('article-title');\n    const dateElement = document.createElement('i');\n    dateElement.textContent = `Published on ${article.publish_date}`;\n    dateElement.classList.add('article-date');\n    const infoContainer = document.createElement('div');\n    infoContainer.classList.add('info-container', 'hidden');\n    const expandButton = document.createElement('button');\n    expandButton.textContent = 'Expand Article';\n    expandButton.classList.add('expand-article');\n    const linkButton = document.createElement('a');\n    linkButton.textContent = 'Go to Site';\n    linkButton.href = article.url;\n    linkButton.target = '_blank';\n    linkButton.classList.add('go-to-site');\n    const contentContainer = document.createElement('div');\n    contentContainer.classList.add('content-container', 'hidden');\n    const bodyElement = document.createElement('p');\n    bodyElement.textContent = article.body;\n    bodyElement.classList.add('article-body');\n    contentContainer.appendChild(bodyElement);\n    infoContainer.appendChild(expandButton);\n    titleElement.addEventListener('click', () => {\n      infoContainer.classList.toggle('hidden');\n    });\n    expandButton.addEventListener('click', event => {\n      event.stopPropagation();\n      contentContainer.classList.toggle('hidden');\n      if (!contentContainer.classList.contains('hidden')) {\n        infoContainer.appendChild(linkButton);\n      } else {\n        if (infoContainer.contains(linkButton)) {\n          infoContainer.removeChild(linkButton);\n        }\n      }\n      expandButton.textContent = contentContainer.classList.contains('hidden') ? 'Expand Article' : 'Collapse Article';\n    });\n    articleElement.appendChild(titleElement);\n    articleElement.appendChild(dateElement);\n    articleElement.appendChild(infoContainer);\n    articleElement.appendChild(contentContainer);\n    topicsPane.appendChild(articleElement);\n    // Set the article ID on the element for drag and drop\n    articleElement.dataset.articleId = article.id;\n\n    // Set up drag start event\n    articleElement.setAttribute('draggable', true);\n    articleElement.addEventListener('dragstart', e => {\n      e.dataTransfer.setData('text/plain', e.target.dataset.articleId);\n    });\n\n    // Append the articleElement to the topicsPane\n    topicsPane.appendChild(articleElement);\n  });\n\n  // Initialize the drop zone\n  initializeDropZone();\n}\nfunction initializeDropZone() {\n  const responsePane = document.getElementById('response-pane');\n  responsePane.addEventListener('dragover', e => {\n    e.preventDefault(); // Necessary to allow drop\n  });\n\n  responsePane.addEventListener('drop', e => {\n    e.preventDefault();\n    const articleId = e.dataTransfer.getData('text/plain');\n    responsePane.dataset.selectedArticleId = articleId; // Store the ID on the drop zone\n    // You might want to do something with the dropped article here\n  });\n}\n\nfunction analyzeArticle(articleId, questionText) {\n  // Display the question in the chat\n  addChatMessage(questionText, true);\n  fetch('http://127.0.0.1:8000/analyze_article/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      article_id: articleId,\n      question_text: questionText\n    })\n  }).then(response => response.json()).then(data => {\n    // Display the server's response in the chat\n    console.log(data);\n    addChatMessage(data.response.choices[0].message.content, false);\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n}\ndocument.getElementById('submit-button').addEventListener('click', () => {\n  const userInput = document.getElementById('user-input');\n  const questionText = userInput.value;\n  const articleId = document.getElementById('response-pane').dataset.selectedArticleId;\n  if (questionText && articleId) {\n    analyzeArticle(articleId, questionText);\n    userInput.value = ''; // Clear the input field after submitting\n  }\n});\n\nfunction addChatMessage(text, isQuestion) {\n  const responsePane = document.getElementById('response-pane');\n  const messageDiv = document.createElement('div');\n  messageDiv.textContent = text;\n  messageDiv.className = isQuestion ? 'chat-message question' : 'chat-message response';\n  // Ensure the new message is added above the input container\n  const inputContainer = document.getElementById('input-container');\n  responsePane.insertBefore(messageDiv, inputContainer);\n  // Scroll to the bottom of the response pane to show the latest message\n  responsePane.scrollTop = responsePane.scrollHeight;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teWpzcC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;